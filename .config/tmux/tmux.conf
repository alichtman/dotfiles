#############################################################################
#
# ████████╗███╗   ███╗██╗   ██╗██╗  ██╗    ██████╗ ██████╗ ███╗   ██╗███████╗
# ╚══██╔══╝████╗ ████║██║   ██║╚██╗██╔╝   ██╔════╝██╔═══██╗████╗  ██║██╔════╝
#    ██║   ██╔████╔██║██║   ██║ ╚███╔╝    ██║     ██║   ██║██╔██╗ ██║█████╗
#    ██║   ██║╚██╔╝██║██║   ██║ ██╔██╗    ██║     ██║   ██║██║╚██╗██║██╔══╝
#    ██║   ██║ ╚═╝ ██║╚██████╔╝██╔╝ ██╗██╗╚██████╗╚██████╔╝██║ ╚████║██║
#    ╚═╝   ╚═╝     ╚═╝ ╚═════╝ ╚═╝  ╚═╝╚═╝ ╚═════╝ ╚═════╝ ╚═╝  ╚═══╝╚═╝
#
#############################################################################

# General Configuration {{{

# Nvim checkhealth recommendation
set-option -g focus-events on

# Immediately escape tmux command input on ESC
set -sg escape-time 0

# Save some history
set -g history-limit 260000

# Don't wrap searches; it's super confusing given tmux's reverse-ordering of
# position info in copy mode.
set -w -g wrap-search off

# set -g default-terminal screen-256color
set -g default-terminal xterm-256color

# Set default shell to zsh on macOS and Linux
if 'test "$(uname -s)" = Darwin' 'set -g default-shell /usr/local/bin/zsh' 'set -g default-shell /usr/bin/zsh'

# Scroll and select with mouse
set -g mouse on

# END General Config }}}

# Bindings {{{

# Set the prefix to `ctrl + a` instead of `ctrl + b`
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# Prefix + a to go to beginning of prompt line (since Ctrl-A won't do that now)
bind a send-prefix

unbind '"'
unbind %

# Edit ~/.tmux.conf and reload settings on quit
unbind e
bind e new-window -n '~/.config/tmux/tmux.conf' "sh -c 'nvim ~/.config/tmux/tmux.conf && tmux source ~/.config/tmux/tmux.conf'"

# Use r to quickly reload tmux settings
unbind r
bind r source-file ~/.config/tmux/tmux.conf \; display-message "tmux config reloaded"

# Send the same command to all panes/windows/sessions
# https://scripter.co/command-to-every-pane-window-session-in-tmux/
bind E command-prompt -p "Command:" \
       "run \"tmux list-panes -a -F '##{session_name}:##{window_index}.##{pane_index}' \
              | xargs -I PANE tmux send-keys -t PANE '%1' Enter\""

# END Bindings }}}

# Windows {{{

# Start tabs at index 1
set -g base-index 1

# Make pane numbering consistent with windows
setw -g pane-base-index 1

# Automatically renumber window numbers on closing a pane (tmux >= 1.7).
set -g renumber-windows on

# When renaming windows, start with an empty prompt: https://unix.stackexchange.com/a/269542
bind-key , command-prompt "rename-window '%%'"

# Don't automatically set window title
set-option -g automatic-rename off
set-option -g allow-rename off
set-option -g set-titles on
set-option -g set-titles-string '#S'  # #S refers to session name

# Use shift + arrow key to move between windows in a session
bind -n S-Left  previous-window
bind -n S-Right next-window

# Use Ctrl-Shift-L/R to shift window left or right
bind-key -n C-S-Left swap-window -t -1\; select-window -t -1
bind-key -n C-S-Right swap-window -t +1\; select-window -t +1
# END Windows }}}

# Pane Switching / Splitting / Resizing {{{

# Use | and - to split a window vertically and horizontally instead of " and % respectively
bind | split-window -h -c "#{pane_current_path}"
bind \\ split-window -h -c "#{pane_current_path}"
bind _ split-window -v -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# quick pane cycling with ^A
# unbind ^A
# bind ^A select-pane -t :.+

# Switch between panes with hjkl, as one would in vim after pressing ctrl + w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# shift-movement keys will resize panes
bind J resize-pane -D 5
bind K resize-pane -U 5
bind H resize-pane -L 5
bind L resize-pane -R 5

# END Pane Switching / Splitting / Resizing }}}

# Statusline {{{

# General Statusline Settings {{{

# Display messages for 1 second
set-option -g display-time 1000

# Refresh rate of 1 second
set -g status-interval 1

# length of tmux status line
set -g status-left-length 100
set -g status-right-length 160

# Make active pane border blue
set -g pane-active-border-style fg=colour1
set-option -g status-position bottom
set -g status-bg colour0
set -g status-justify left
set -g status on

# END General Statusline Settings }}}


# Clean, Minimal statusline {{{

set -g status-right-style none
set -g message-style bg=colour2,fg=colour0
set -g status-style none
set -g pane-border-style bg=default
set -g pane-active-border-style bg=default,fg=colour2
set -g pane-border-style fg=colour240
set -g status-left-style none
setw -g window-status-style bg=default,fg=colour242,none
setw -g window-status-current-style bg=default,fg=colour242
setw -g window-status-activity-style fg=colour2,none
setw -g window-status-separator ""
set -g status-left "#[fg=colour4,bold] #S #[fg=colour2,nobold,nounderscore,noitalics]"
# set -g status-right " #[fg=colour4,bold] #{?window_zoomed_flag,Z,} #{tmux_mode_indicator} #[fg=colour7,bold]#{forecast} #[fg=colour7]|#[fg=colour1,bold,nounderscore,noitalics] #(~/.config/tmux/scripts/spotify-linux.sh) #[fg=colour7]|#[fg=colour3] %a, %b %d - %H:%M "
set -g status-right " #[fg=colour4,bold] #{?window_zoomed_flag,Z,} #{tmux_mode_indicator} #[fg=colour1,bold,nounderscore,noitalics] #(~/.config/tmux/scripts/spotify-linux.sh) #[fg=colour7]|#[fg=colour3] %a, %b %d - %H:%M "
setw -g window-status-format "#[fg=colour242,nobold,nounderscore,noitalics] #[fg=colour248] #I #W #[fg=colour0,nobold,nounderscore,noitalics]"
setw -g window-status-current-format "#[fg=colour0,nobold,nounderscore,noitalics] #[fg=colour9] #I #W #[fg=colour0,nobold,nounderscore,noitalics]"

# END Clean, Minimal statusline }}}

# Airline statusline {{{

# set -g status-left "#[fg=colour16,bg=colour254,bold] #S #[fg=colour254,bg=colour234,nobold,nounderscore,noitalics]"
# set -g status-right '#[fg=colour7]#[bg=colour7] #[fg=colour0]#(~/.tmux/scripts/weather.sh) #[fg=colour1]#[fg=colour3]#[bg=colour3]#[fg=colour0] #(~/.tmux/scripts/music.sh) #[bg=colour3]#[fg=colour1]#[bg=colour1]#[fg=colour0] %b %d %H:%M '
# setw -g window-status-format "#[fg=colour244,bg=colour234] #I #[fg=colour250,bg=colour234] #W "
# setw -g window-status-current-format "#[fg=colour234,bg=colour31,nobold,nounderscore,noitalics]#[fg=colour117,bg=colour31] #I #[fg=colour231,bg=colour31,bold] #W #[fg=colour31,bg=colour234,nobold,nounderscore,noitalics]"
# setw -g window-status-separator ""

# END Airline-like status line }}}

# Pills Statusline {{{

# Modified from: https://github.com/Who23/dots/blob/471552250cf9df993cd3f297166e125d84cee5eb/tmux.conf#L30-L31
# set -g status-bg #333333
# set -g status-fg white
# set -g status-justify centre
# set -g window-status-current-format "#[fg=blue]#[fg=black]#[bg=blue]#I #[bg=brightblack]#[fg=white] #W#[fg=brightblack]#[bg=#333333] "
# set -g window-status-format "#[fg=red]#[fg=black]#[bg=red]#I #[bg=brightblack]#[fg=white] #W#[fg=brightblack]#[bg=#333333] "

# END Pills Statusline }}}

# END Statusline }}}

# Plugins {{{

# Install tpm if needed
if-shell -b '[ ! -d "$XDG_CONFIG_HOME"/tmux/plugins/tpm ]' " \
             echo Installing tpm... && mkdir -p $XDG_CONFIG_HOME/tmux/plugins/tpm && git clone https://github.com/tmux-plugins/tpm $XDG_CONFIG_HOME/tmux/plugins/tpm && $XDG_CONFIG_HOME/tmux/plugins/tpm/bin/install_plugins'"


set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'MunifTanjim/tmux-mode-indicator'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'Morantron/tmux-fingers'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'aaronpowell/tmux-weather'
# set -g @plugin 'thuanOwa/tmux-fzf-session-switch'

# Launch fzf with < Crtl-A Ctrl-S >
TMUX_FZF_LAUNCH_KEY="C-s"

# tmux save/restore
set -g @continuum-restore 'on'
set -g @continuum-save-interval '5'
set -g @resurrect-dir '~/.config/tmux/resurrect'

# https://github.com/tmux-plugins/tmux-resurrect/issues/101#issuecomment-560026971
set -g @resurrect-hook-pre-restore-pane-processes 'tmux switch-client -n && tmux kill-session -t=0 && tmux kill-session -t=10'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.config/tmux/plugins/tpm/tpm'

# Plugins }}}

# weather {{{

set -g @forecast-format '%C'+'%f'

# }}}

# Copying and Pasting {{{

# NOTE: For some reason, these settings are being overwritten by something above. So this now lives down here.

set -g @yank_selection_mouse 'clipboard'
set -s set-clipboard on

# Use system clipboard on macOS
if-shell -b '[ "$(uname -s)" = Darwin ]' {
    set -g default-command "exec reattach-to-user-namespace -l $SHELL"
}

# Use system clipboard on Linux, and don't snap to bottom after copying
if-shell -b '[ "$(uname -s)" = Linux ]' {
    unbind -T copy-mode-vi y
    if-shell -b '[ "$XDG_SESSION_TYPE" = wayland ]' {
        bind-key -T copy-mode-vi y send-keys -X copy-pipe "wl-copy"
        bind-key -T copy-mode-vi Y send-keys -X copy-pipe "wl-copy"
        bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "wl-copy"
        bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "wl-copy"
    } {
        bind-key -T copy-mode-vi y send-keys -X copy-pipe "xsel -ib"
        bind-key -T copy-mode-vi Y send-keys -X copy-pipe "xsel -ib"
        bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xsel -ib"
        bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "xsel -ib"
    }
}

# END Copying and Pasting }}}

# vim: set foldmethod=marker :
